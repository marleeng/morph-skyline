@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix foaf: <http://xmlns.com/foaf/0.1#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix dc: <http://purl.org/dc/elements/1.1#> .
@prefix rev: <http://purl.org/stuff/rev#> .
@prefix foaf: <http://xmlns.com/foaf/0.1#> .
@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix foaf: <http://xmlns.com/foaf/0.1#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix dc: <http://purl.org/dc/elements/1.1#> .
@prefix dc: <http://purl.org/stuff/rev#> .
@prefix rev: <http://purl.org/stuff/rev#> .
@prefix bsbm: <http://www4.wiwiss.fu-berlin.de/bizer/bsbm/v01/vocabulary/> .
@prefix bsbm-inst: <http://www4.wiwiss.fu-berlin.de/bizer/bsbm/v01/vocabulary/> .
@prefix ex: <http://example.com/> .

@base <http://mappingpedia.org/rdb2rdf/r2rml/tc/> .

<#TriplesMap1>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "植物"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/植物/{名}/植物/{使用部}";
		rr:termType rr:IRI;
		rr:class <http://example.com/植物>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/植物#名>;
		rr:objectMap [ rr:column "名"; rr:datatype xsd:string; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/植物#使用部>;
		rr:objectMap [ rr:column "使用部"; rr:datatype xsd:string; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/植物#条件>;
		rr:objectMap [ rr:column "条件"; rr:datatype xsd:string; ];
	].

<#TriplesMap2>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/植物#名>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/植物> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:string ];
	].

<#TriplesMap3>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/植物#使用部>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/植物> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:string ];
	].

<#TriplesMap4>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/植物#条件>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/植物> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:string ];
	].

<#TriplesMap5>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/植物>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap6>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "成分"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/成分/{植物名}";
		rr:termType rr:IRI;
		rr:class <http://example.com/成分>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/成分#皿>;
		rr:objectMap [ rr:column "皿"; rr:datatype xsd:string; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/成分#植物名>;
		rr:objectMap [ rr:column "植物名"; rr:datatype xsd:string; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/成分#使用部>;
		rr:objectMap [ rr:column "使用部"; rr:datatype xsd:string; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/成分#ref-植物名>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap1>;
			rr:joinCondition [
				rr:child "植物名";
				rr:parent "名";
			];
			rr:joinCondition [
				rr:child "使用部";
				rr:parent "使用部";
			];
		];
	].

<#TriplesMap7>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/成分>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap8>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/成分#皿>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/成分> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:string ];
	].

<#TriplesMap9>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/成分#植物名>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/成分> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:string ];
	].

<#TriplesMap10>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/成分#使用部>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/成分> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:string ];
	].

<#TriplesMap11>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/植物Has成分>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/植物> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/成分> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/成分BelongsTo植物> ];
	].

<#TriplesMap12>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_72877.使用部, t_12794.名 FROM (植物 AS t_72877 JOIN 成分 AS t_49633 ON ((t_12794.名=t_49633.植物名)))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/植物/{名}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/植物Has成分>;
		rr:objectMap [ rr:template "http://example.com/成分/{名}" ];
	].

<#TriplesMap13>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/成分BelongsTo植物>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/成分> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/植物> ];
	].

